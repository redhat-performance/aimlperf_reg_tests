---

- name: Get CFLAGS
  command: rpm --eval '%{optflags}'
  args:
    warn: false
  register: CFLAGS

- debug:
    var: CFLAGS.stdout

- name: Determine if we have AVX
  shell: |
    avx=$(lscpu | grep 'Flags' | grep avx)
    echo $avx
  register: have_avx

- name: Determine if we have AVX2
  shell: |
    avx2=$(lscpu | grep 'Flags' | grep avx2)
    echo $avx2
  register: have_avx2

- name: Determine if we have AVX512
  shell: |
    avx512=$(lscpu | grep 'Flags' | grep avx512)
    echo $avx512
  register: have_avx512

- name: Set 'enable_avx' flag
  shell: if [[ ! -z '{{ have_avx.stdout }}' ]]; then echo "--enable-avx"; else echo "--disable-avx"; fi
  register: enable_avx

- debug:
    var: enable_avx.stdout

- name: Set 'enable_avx2' flag
  shell: if [[ ! -z '{{ have_avx2.stdout }}' ]]; then echo "--enable-avx2"; else echo "--disable-avx2"; fi
  register: enable_avx2

- debug:
    var: enable_avx2.stdout

- name: Set 'enable_avx512' flag
  shell: if [[ ! -z '{{ have_avx512.stdout }}' ]]; then echo "--enable-avx512"; else echo "--disable-avx512"; fi
  register: enable_avx512

- debug:
    var: enable_avx512.stdout

- name: Configure FFTW
  shell: |
    cd {{ build_dir }}/FFTW
    ./configure "CC={{ gcc }}" "CFLAGS={{ cflags.stdout }}" {{ enable_avx.stdout }} {{ enable_avx2.stdout }} {{ enable_avx512.stdout }} --enable-sse2 --enable-shared --enable-threads

- make:
    chdir: '{{ build_dir }}/FFTW'
    target: all
  register: build_results

- debug:
    var: build_results.stdout_lines
