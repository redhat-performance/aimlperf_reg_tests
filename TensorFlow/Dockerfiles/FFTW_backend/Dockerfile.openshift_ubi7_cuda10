FROM nvidia/cuda:10.0-base-ubi7
MAINTAINER Courtney Pacheco <cpacheco@redhat.com>
ENV LANG=en_US.utf8
USER root
ENV BUILDER_VERSION 1.0

# RHEL version (for building FFTW)
ENV RHEL_VERSION=7

# Python version
ENV PYTHON_VERSION=3.6.9

# Ansible version
ENV ANSIBLE_VERSION=v2.8.6

# Set up labels
LABEL io.openshift.s2i.scripts-url="image:///usr/libexec/s2i"
LABEL io.openshift.expose-services="8080:http"

# Copy s2i assemble + run
COPY TensorFlow/.s2i_fftw/bin/ /usr/libexec/s2i

# Put on port 8080
EXPOSE 8080

# Set timeout for yum (in seconds) to prevent Curl timeout errors w/ yum
ENV YUM_TIMEOUT=300
RUN sed -i "/[main]/a timeout=${YUM_TIMEOUT}" /etc/yum.conf

# Set home dir
ENV HOME=/home

# Set app directory
ENV APPDIR="${HOME}/benchmark_app"

# Set user
ENV USER=1001

# Set playbook paths
ENV PLAYBOOKS_DIR=${APPDIR}/playbooks
ENV FFTW_PREREQS_PLAYBOOK=${PLAYBOOKS_DIR}/fftw_package_installation
ENV TF_PREREQS_PLAYBOOK=${PLAYBOOKS_DIR}/tensorflow_package_installation
ENV FFTW_INSTALLATION=${PLAYBOOKS_DIR}/FFTW_installation
ENV TENSORFLOW_INSTALLATION=${PLAYBOOKS_DIR}/TensorFlow_installation
ENV TENSORFLOW_MODELS=${PLAYBOOKS_DIR}/TensorFlow_Models
ENV NCCL_INSTALLATION=${PLAYBOOKS_DIR}/nccl_installation
ENV CUDNN_INSTALLATION=${PLAYBOOKS_DIR}/cudnn_installation
ENV TENSORRT_INSTALLATION=${PLAYBOOKS_DIR}/tensorrt_installation

# Set scripts path
ENV SCRIPTS_DIR=${APPDIR}/scripts

# Create folders for playbooks and folder for playbooks cache, then allow execute permissions
RUN mkdir -p ${FFTW_PREREQS_PLAYBOOK} && \
    mkdir -p ${TF_PREREQS_PLAYBOOK} && \
    mkdir -p ${FFTW_INSTALLATION} && \
    mkdir -p ${TENSORFLOW_INSTALLATION} && \
    mkdir -p ${TENSORFLOW_MODELS} && \
    mkdir -p ${NCCL_INSTALLATION} && \
    mkdir -p ${CUDNN_INSTALLATION} && \
    mkdir -p ${TENSORRT_INSTALLATION} && \
    mkdir -p ${SCRIPTS_DIR} && \
    mkdir -p ${APPDIR}/.cache && \
    chmod -R +x ${PLAYBOOKS_DIR}

# Copy playbooks and scripts
COPY FFTW/playbooks/package_installation ${FFTW_PREREQS_PLAYBOOK}
COPY TensorFlow/playbooks/package_installation ${TF_PREREQS_PLAYBOOK}
COPY FFTW/playbooks/FFTW_installation ${FFTW_INSTALLATION}
COPY TensorFlow/playbooks/TensorFlow_installation ${TENSORFLOW_INSTALLATION}
COPY TensorFlow/playbooks/TensorFlow_Models ${TENSORFLOW_MODELS}
COPY TensorFlow/playbooks/nccl_installation ${NCCL_INSTALLATION}
COPY TensorFlow/playbooks/cudnn_installation ${CUDNN_INSTALLATION}
COPY TensorFlow/playbooks/tensorrt_installation ${TENSORRT_INSTALLATION}
COPY helper_scripts/Python/install_python_from_source.sh ${SCRIPTS_DIR}
COPY helper_scripts/Ansible/install_ansible_from_source.sh ${SCRIPTS_DIR}

# Create symlink for NumPy so that it can find endian.h
RUN yum -y install glibc glibc-devel && \
    ln -s /usr/include/endian.h /usr/include/sys/endian.h

# Install CUDA packages
ENV CUDA_PACKAGE_VERSION=10-0
RUN yum clean all && \
    yum -y install cuda-cudart-${CUDA_PACKAGE_VERSION} \
                   cuda-compat-${CUDA_PACKAGE_VERSION} \
                   cuda-core-${CUDA_PACKAGE_VERSION} \
                   cuda-cudart-dev-${CUDA_PACKAGE_VERSION} \
                   cuda-cufft-${CUDA_PACKAGE_VERSION} \
                   cuda-cufft-dev-${CUDA_PACKAGE_VERSION} \
                   cuda-cupti-${CUDA_PACKAGE_VERSION} \
                   cuda-curand-${CUDA_PACKAGE_VERSION} \
                   cuda-curand-dev-${CUDA_PACKAGE_VERSION} \
                   cuda-cusolver-${CUDA_PACKAGE_VERSION} \
                   cuda-cusolver-dev-${CUDA_PACKAGE_VERSION} \
                   cuda-cusparse-${CUDA_PACKAGE_VERSION} \
                   cuda-cusparse-dev-${CUDA_PACKAGE_VERSION} \
                   cuda-misc-headers-${CUDA_PACKAGE_VERSION} \
                   libcublas-devel && \
    rm -rf /var/cache/dnf/*

# Install Python version ${PYTHON_VERSION} from source and Ansible version ${ANSIBLE_VERSION} from source
RUN cd ${SCRIPTS_DIR} && \
    sh install_python_from_source.sh ${PYTHON_VERSION} && \
    sh install_ansible_from_source.sh ${ANSIBLE_VERSION}

# Install FFTW + TensorFlow prerequisites via Ansible and pip3
RUN cd ${FFTW_PREREQS_PLAYBOOK} && \
    PYTHONPATH=/usr/lib/python2.7 ansible-playbook -i hosts play.yaml --extra-vars="{rhel_version: '7', use_ubi: 'yes', update_yum: 'no', ansible_python_interpreter: '/usr/bin/python2.7'}" && \
    cd ${TF_PREREQS_PLAYBOOK} && \
    PYTHONPATH=/usr/lib/python2.7 ansible-playbook -i hosts play.yaml --extra-vars="{rhel_version: '7', use_s2i_ubi: 'yes', ansible_python_interpreter: '/usr/bin/python2.7'}"

# Create and give user permissions to modify certain directories that are required to run the Ansible
# playbooks that are being pulled into this Dockerfile. Also allow /usr/local/cuda to be writable and
# allow /.aws to be writeable in case the user wants to use an AWS s3 bucket to download NCCL, cuDNN,
# and/or TensorRT
RUN chmod -R 777 /usr/libexec/s2i && \
    chmod g=u /etc/passwd /etc/group && \
    chmod g=u /etc/subuid /etc/subgid && \
    mkdir -p ${HOME}/.ansible/tmp && \
    mkdir -p ${HOME}/.aws && \
    touch ${HOME}/.aws/credentials && \
    touch ${HOME}/.aws/config && \
    mkdir -p ${HOME}/.cache/bazel && \
    touch ${APPDIR}/.gitconfig && \
    chmod -R 777 /usr/local/cuda && \
    chmod -R 777 ${HOME} && \
    pip3 install awscli && \
    rm -rf /var/cache/yum/*

# Set work directory
WORKDIR ${APPDIR}

# Set user to '1001'
USER ${USER}

# Set CMD
CMD ["/usr/libexec/s2i/run"]
