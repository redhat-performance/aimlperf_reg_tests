FROM registry.redhat.io/ubi7/s2i-core
MAINTAINER Courtney Pacheco <cpacheco@redhat.com>
ENV LANG=en_US.utf8
USER root
ENV BUILDER_VERSION 1.0

# RHEL version (for building FFTW)
ENV RHEL_VERSION=7

# Python version
ENV PYTHON_VERSION=3.6.9

# Python path
ENV PYTHONPATH=/usr/local/lib/python3.6

# Set up labels
LABEL io.openshift.expose-services="8080:http"

# Put on port 8080
EXPOSE 8080

# Set timeout for yum (in seconds) to prevent Curl timeout errors w/ yum
ENV YUM_TIMEOUT=300
RUN sed -i "/[main]/a timeout=${YUM_TIMEOUT}" /etc/yum.conf

# Set top directory
ENV TOPDIR=${HOME}

# Set TensorFlow benchmarks path
ENV TENSORFLOW_BENCHMARKS=/opt/tf-benchmarks

# Set Kubeflow path
ENV KUBEFLOW=/tmp/kubeflow

# Create folders for playbooks and folder for playbooks cache
RUN mkdir -p ${TENSORFLOW_BENCHMARKS} && \
    mkdir -p ${TOPDIR}/.cache

# Put on port 8080
EXPOSE 8080

# Install Python version ${PYTHON_VERSION}
RUN yum -y install gcc \
                   git \
                   make \
                   openssl-devel \
                   wget \
                   zlib-devel && \
    cd /tmp && \
    wget https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz && \
    tar xvf Python-${PYTHON_VERSION}.tgz && \
    cd Python-${PYTHON_VERSION} && \
    ./configure --enable-optimizations && \
    make && \
    make install && \
    cd .. && \
    rm -rf Python-${PYTHON_VERSION} && \
    rm -rf Python-${PYTHON_VERSION}.tgz && \
    rm -rf /var/cache/yum/*

# Create and give user permissions to modify certain directories that are required to run the Ansible
# playbooks that are being pulled into this Dockerfile. Also allow /usr/local/cuda to be writable and
# allow /.aws to be writeable in case the user wants to use an AWS s3 bucket to download NCCL + cuDNN
RUN chmod 777 ${TOPDIR} && \
    touch ${TOPDIR}/.gitconfig && \
    chmod 777 ${TOPDIR}/.gitconfig

# Install TensorFlow GPU
RUN pip3 install tensorflow==2.0.0b1

# Get TensorFlow benchmarks
RUN git clone https://github.com/tensorflow/benchmarks.git ${TENSORFLOW_BENCHMARKS}

# Get Kubeflow git repo so that we can get 'launcher.py' from tf-controller-examples. 'launcher.py'
# will enable us to run a TfJob custom resource (CR).
RUN git clone https://github.com/kubeflow/kubeflow.git ${KUBEFLOW} && \
    cd ${KUBEFLOW}/tf-controller-examples/tf-cnn && \
    cp launcher.py /opt && \
    cd ${KUBEFLOW}/.. && \
    rm -rf ${KUBEFLOW}

# Set permissions and entrypoint
RUN chmod u+x /opt/*
ENTRYPOINT ["/opt/launcher.py"]
