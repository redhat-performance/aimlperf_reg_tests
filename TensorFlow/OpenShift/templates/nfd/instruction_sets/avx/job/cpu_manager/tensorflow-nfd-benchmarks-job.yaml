apiVersion: "v1"
kind: "Template"
metadata:
  annotations:
    description: "Template to run the TensorFlow benchmarks on the CPU with CPU Manager"
    tags: "tensorflow-nfd-benchmarks-job-avx-cpu-mgr"
  name: "tensorflow-nfd-benchmarks-job-avx-cpu-mgr"
objects:
- apiVersion: "batch/v1"
  kind: "Job"
  metadata:
    name: "${APP_NAME}"
  spec:
    runPolicy: "Serial" 
    triggers: 
      -
        type: "ImageChange"
    template:
      metadata:
        name: "${APP_NAME}"
      spec:
        containers:
        - name: "${APP_NAME}"
          image: "${REGISTRY}/${NAMESPACE}/${IMAGESTREAM_NAME}:latest"
          command: ["sh", "-c"]
          args:
            - "cd /mnt/tensorflow_ebs"
            - "ansible-playbook -i hosts play.yaml --extra-vars='{tensorflow_install_dir: \"${TENSORFLOW_TOP_DIR}/${BACKEND}_backend/tensorflow\", device_type: \"${DEVICE}\", benchmarks_path: \"${BENCHMARKS_PATH}\", num_devices: \"${NUM_DEVICES}\"}'"]
          env:
            - name: "TENSORFLOW_TOP_DIR"
              value: "/mnt/tensorflow_ebs/tensorflow-cpu"
            - name: "DEVICE"
              value: "cpu"
            - name: "BENCHMARKS_PATH"
              value: "/home/benchmarks"
            - name: "NUM_DEVICES"
              value: "${NUM_CPUS}"
            - name: "BACKEND"
              value: "${BACKEND}"
          volumeMounts:
            - mountPath: "/mnt/tensorflow_ebs"
              name: "tensorflow-pv"
        volumes:
        - name: "tensorflow-pv"
          persistentVolumeClaim:
            claimName: "tensorflow-pvc"
        restartPolicy: "Never"
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: "beta.kubernetes.io/instance-type"
                  operator: "In"
                  values:
                  - "${INSTANCE_TYPE}"
                - key: "cpumanager"
                  operator: "In"
                  values:
                  - "true"
        resources:
          requests:
            cpu: "${NUM_CPUS}"
            memory: "${MEMORY_SIZE}"
          limits:
            cpu: "${NUM_CPUS}"
            memory: "${MEMORY_SIZE}"
parameters:
- description: "ImageStream name"
  name: "IMAGESTREAM_NAME"
  from: '[A-Z0-9]{10}'
  value: "tensorflow-rhel7"
  required: true 
- description: "TensorFlow CPU Manager app name"
  name: "APP_NAME"
  from: '[A-Z0-9]{20}'
  value: "tensorflow-benchmarks-app"
  required: true
- description: "Registry route. Use `oc registry info` to get the route after exposing it."
  name: "REGISTRY"
  value: "image-registry.openshift-image-registry.svc:5000"
  required: true
- description: "Current project (i.e., namespace)"
  name: "NAMESPACE"
  from: '[A-Z0-9]{15}'
  value: "openshift-image-registry"
  required: true
- description: "AWS instance type"
  name: "INSTANCE_TYPE"
  value: "m4.xlarge"
  required: true
- description: "RHEL version to use"
  name: "RHEL_VERSION"
  from: '[0-9]{1}'
  value: "7"
  required: true
- description: "Number of CPUs to use (must be an integer)"
  name: "NUM_CPUS"
  from: '[0-9]{5}'
  value: ""
  required: false
- description: "Backend -- Either 'fftw' or 'openblas'"
  name: "BACKEND"
  from: '[A-Z]{8}'
  value: "fftw"
  required: false
