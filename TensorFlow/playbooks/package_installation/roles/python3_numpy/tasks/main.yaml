---

# Install NumPy requirements
- name: Install yum NumPy requirements for RHEL 7 (for non-UBI and non-s2i images only)
  yum:
    name:
      - atlas
      - atlas-devel
      - blas
      - blas-devel
      - blas-static
      - cpp
      - Cython
      - gcc
      - gcc-c++
      - gcc-gfortran
      - lapack
      - make
      - python34-devel
      - subversion
    install_weak_deps: no
  when: rhel_ver == '7' and s2i_ubi == 'no'

- name: Install yum NumPy requirements for RHEL 7 (for UBI and s2i images only)
  yum:
    name:
      - atlas
      - atlas-devel
      - cpp
      - expat-devel
      - gcc
      - gcc-c++
      - gcc-gfortran
      - make
      - python34-devel
      - zlib-devel
    install_weak_deps: no
  when: rhel_ver == '7' and s2i_ubi == 'yes'

- name: Install NumPy requirements for RHEL 8 (for non-UBI and non-s2i images only)
  dnf:
    name:
      - atlas
      - atlas-devel
      - blas
      - blas-devel
      - blas-static
      - cpp
      - Cython
      - gcc
      - gcc-c++
      - gcc-gfortran
      - lapack
      - make
      - python36-devel
      - subversion
    install_weak_deps: no
  when: rhel_ver == '8' and s2i_ubi == 'no'

- name: Install yum NumPy requirements for RHEL 8 (for UBI and s2i images only)
  dnf:
    name:
      - atlas
      - atlas-devel
      - cpp
      - expat-devel
      - gcc
      - gcc-c++
      - gcc-gfortran
      - make
      - python36-devel
      - zlib-devel
    install_weak_deps: no
  when: rhel_ver == '8' and s2i_ubi == 'yes'

# For s2i and ubi7/ubi8 only
- block:
  - name: Install pip NumPy requirements for RHEL 7/8 (for UBI and s2i images only)
    pip:
      name: Cython
      executable: pip3

  - name: << s2i/ubi only >> Create build dirs for APR (Apache Portable Runtime), APR util, SQLite, LZ4, utf8proc, and Subversion
    file:
      state: directory
      path: '{{ item }}'
    with_items:
      - '{{ APR_BUILD_DIR }}'
      - '{{ APR_UTIL_BUILD_DIR }}'
      - '{{ SQLITE_BUILD_DIR }}'
      - '{{ LZ4_BUILD_DIR }}'
      - '{{ UTF8PROC_BUILD_DIR }}'
      - '{{ SUBVERSION_BUILD_DIR }}'

  - name: << s2i/ubi only >> Download tarballs for APR, APR Util, SQLite, and Subversion
    unarchive:
      src: '{{ item.src }}'
      dest: '{{ item.dest }}'
      remote_src: yes
    with_items:
      - { src: 'https://archive.apache.org/dist/apr/apr-{{ APR_VERSION }}.tar.gz', dest: '{{ APR_BUILD_DIR }}' }
      - { src: 'https://archive.apache.org/dist/apr/apr-util-{{ APR_UTIL_VERSION }}.tar.gz', dest: '{{ APR_UTIL_BUILD_DIR }}' }
      - { src: 'https://www.sqlite.org/2019/sqlite-autoconf-3280000.tar.gz', dest: '{{ SQLITE_BUILD_DIR }}'}
      - { src: 'https://archive.apache.org/dist/subversion/subversion-{{ SUBVERSION_VERSION }}.tar.gz', dest: '{{ SUBVERSION_BUILD_DIR }}' }

  - name: << s2i/ubi only >> Clone repositories for LZ4 and utf8proc
    git:
      repo: '{{ item.repo }}'
      version: '{{ item.version }}'
      dest: '{{ item.dest }}'
    with_items:
      - { repo: 'https://github.com/lz4/lz4.git', version: '{{ LZ4_VERSION }}', dest: '{{ LZ4_BUILD_DIR }}' }
      - { repo: 'https://github.com/JuliaStrings/utf8proc.git', version: '{{ UTF8PROC_VERSION }}', dest: '{{ UTF8PROC_BUILD_DIR }}' }

  - name: << s2i/ubi only >> Configure APR
    shell: |
      cd {{ APR_BUILD_DIR }}/apr-{{ APR_VERSION }}
      ./configure

  - name: << s2i/ubi only >> Make APR
    make:
      target: all
      chdir: '{{ APR_BUILD_DIR }}/apr-{{ APR_VERSION }}'

  - name: << s2i/ubi only >> Install APR
    make:
      target: install
      chdir: '{{ APR_BUILD_DIR }}/apr-{{ APR_VERSION }}'

  - name: << s2i/ubi only >> Configure APR-util
    shell: |
      cd {{ APR_UTIL_BUILD_DIR }}/apr-util-{{ APR_UTIL_VERSION }}
      ./configure --with-apr=/usr/local/apr

  - name: << s2i/ubi only >> Make APR-util
    make:
      target: all
      chdir: '{{ APR_UTIL_BUILD_DIR }}/apr-util-{{ APR_UTIL_VERSION }}'

  - name: << s2i/ubi only >> Install APR-util
    make:
      target: install
      chdir: '{{ APR_UTIL_BUILD_DIR }}/apr-util-{{ APR_UTIL_VERSION }}'

  - name: << s2i/ubi only >> Configure SQLite
    shell: |
      cd {{ SQLITE_BUILD_DIR }}/sqlite-autoconf-3280000
      ./configure

  - name: << s2i/ubi only >> Make SQLite
    make:
      target: all
      chdir: '{{ SQLITE_BUILD_DIR }}/sqlite-autoconf-3280000'

  - name: << s2i/ubi only >> Install SQLite
    make:
      target: install
      chdir: '{{ SQLITE_BUILD_DIR }}/sqlite-autoconf-3280000'

  - name: << s2i/ubi only >> Check for any existing LZ4 binaries/symlinks
    shell: ls /usr/local/bin | grep lz4
    register: lz4_executables
    ignore_errors: yes

  - name: << s2i/ubi only >> Remove LZ4 symlinks
    command: rm '{{ item }}'
    with_items:
      - '/usr/local/bin/lz4'
      - '/usr/local/bin/lz4c'
      - '/usr/local/bin/lz4cat'
      - '/usr/local/bin/unlz4'
    when: lz4_executables.stdout != ""

  - name: << s2i/ubi only >> Make LZ4 library
    make:
      target: all
      chdir: '{{ LZ4_BUILD_DIR }}'

  - name: << s2i/ubi only >> Install LZ4 library
    make:
      target: install
      chdir: '{{ LZ4_BUILD_DIR }}'

  - name: << s2i/ubi only >> Make utf8proc
    make:
      target: all
      chdir: '{{ UTF8PROC_BUILD_DIR }}'

  - name: << s2i/ubi only >> Install utf8proc
    make:
      target: install
      chdir: '{{ UTF8PROC_BUILD_DIR }}'

  - name: << s2i/ubi only >> Configure Subversion
    shell: |
      cd {{ SUBVERSION_BUILD_DIR }}/subversion-{{ SUBVERSION_VERSION }}
      ./configure

  - name: << s2i/ubi only >> Make subversion
    make:
      target: all
      chdir: '{{ SUBVERSION_BUILD_DIR }}/subversion-{{ SUBVERSION_VERSION }}'

  - name: << s2i/ubi only >> Install subversion
    make:
      target: install
      chdir: '{{ SUBVERSION_BUILD_DIR }}/subversion-{{ SUBVERSION_VERSION }}'

  - name: << s2i/ubi only >> Remove build dirs
    file:
      state: absent
      path: '{{ item }}'
    with_items:
      - '{{ APR_BUILD_DIR }}'
      - '{{ APR_UTIL_BUILD_DIR }}'
      - '{{ SQLITE_BUILD_DIR }}'
      - '{{ LZ4_BUILD_DIR }}'
      - '{{ UTF8PROC_BUILD_DIR }}'
      - '{{ SUBVERSION_BUILD_DIR }}'

  when: s2i_ubi == 'yes'
