---

- hosts: localhost
  connection: local

  # Set global vars
  vars:

    # Version of RHEL to use
    RHEL_VERSION: '{{ rhel_version | default("8") }}'

    # Version of TensorFlow to use
    TENSORFLOW_VERSION: '{{ tf_version | default("2.1.0") }}'

    # Where to install TensorFlow to
    TENSORFLOW_INSTALL_DIR: '{{ tf_install_dir | default("/opt/tensorflow") }}'

    # Version of NumPy to use
    NUMPY_VERSION: '{{ np_version | default("1.17.3") }}'

    # Use FFTW or OpenBLAS?
    BLAS_BACKEND: '{{ blas_backend | default("fftw") }}'

    # Use CPU or GPU?
    DEVICE: '{{ device | default("cpu") }}'

    # Paths to CUDA/NVIDIA libraries
    NCCL_INSTALL_PATH: '{{ nccl_install_path | default("/home/nccl") }}'
    CUDNN_INSTALL_PATH: '{{ cudnn_install_path | default("/home/cuDNN") }}'
    TENSORRT_INSTALL_PATH: '{{ tensorrt_install_path | default("/home/TensorRT") }}'

    # << GPU only >> Select which CUDA/NVIDIA libraries to use
    USE_NCCL: '{{ use_nccl | default("yes") }}'
    USE_CUDNN: '{{ use_cudnn | default("yes") }}'
    USE_TENSORRT: '{{ use_tensorrt | default("no") }}'

    # For NumPy site config, we must point to where the BLAS shared object
    # libraries and include folders are installed
    BLAS_LIB_DIRS: '{{ blas_library_dirs | default("/usr/lib64:/usr/lib") }}'
    BLAS_INCLUDE_DIRS: '{{ blas_include_dirs | default("/usr/include") }}'

    # Which GCC to use
    CC: '{{ cc | default("/usr/bin/gcc") }}'
    GCC_LIBS: '{{ gcc_libs | default("/usr/lib64") }}'

    # Python path + executable path
    PYTHONPATH: '{{ pythonpath | default("/usr/lib/python3.6/site-packages") }}'
    PYTHON_BIN_PATH: '{{ python_executable | default("/usr/bin/python3") }}'

    # Use UBI or s2i?
    UBI: '{{ use_ubi | default("no") }}'
    S2I: '{{ use_s2i | default("no") }}'

    # Which AVX instructions to use? If empty, this playbook will determine
    # the instructions for you. Otherwise, input 'avx', 'avx2', or 'avx512'
    AVX_INSTRUCTIONS: '{{ avx_instructions | default("") }}'

  roles:
    # Setup NumPy and TensorFlow build folders
    - role: setup

    # Gets NumPy and TensorFlow sources
    - role: get

    # Builds NumPy
    - role: build_numpy

    # Installs NumPy
    - role: install_numpy

    # Builds TensorFlow
    - role: build_tensorflow

    # Installs TensorFlow
    - role: install_tensorflow
