---

- name: Configure TensorFlow for the CPU
  shell: |
    cd {{ TENSORFLOW_BUILD_DIR }} 
    ./configure
  environment:
    GCC_HOST_COMPILER_PATH: '/usr/bin/gcc'
    CC_OPT_FLAGS: '-march=native'
    TF_DOWNLOAD_CLANG: '0'
    TF_ENABLE_XLA: '0'
    TF_NEED_COMPUTECPP: '0'
    TF_NEED_CUDA: '0'
    TF_NEED_MPI: '0'
    TF_NEED_OPENCL: '0'
    TF_NEED_OPENCL_SYCL: '0'
    TF_NEED_ROCM: '0'
    TF_NEED_TENSORRT: '0'
    TF_PYTHON_CONFIG_REPO: '@org_tensorflow//third_party/toolchains/cpus/py'
    TF_SET_ANDROID_WORKSPACE: '0'
    PYTHON_BIN_PATH: '{{ PYTHON_BIN_PATH }}'
    PYTHON_LIB_PATH: '{{ PYTHON_LIB_PATH }}'
    NUMPY_INCLUDE_DIR: '{{ NUMPY_INSTALL_DIR }}/lib64/python3.6/site-packages/numpy-{{ NUMPY_VERSION }}-py3.6-linux-x86_64.egg/numpy/core/include/numpy'
    LD_LIBRARY_PATH: '{{ NUMPY_INSTALL_DIR }}/lib64/python3.6/site-packages/numpy-{{ NUMPY_VERSION }}-py3.6-linux-x86_64.egg/numpy/core'
  register: tensorflow_configure_log_cpu
  when: USE_CPU == 'yes' and USE_GPU == 'no'

# Command taken from: https://georgesterpu.github.io/compile_tensorflow.html
- name: If using the GPU, find CUDA version
  shell: /usr/local/cuda/bin/nvcc --version | sed -n 's/^.*release \(.*\),.*/\1/p'
  register: cuda_version
  when: USE_CPU == 'no' and USE_GPU == 'yes'

# Command taken from: https://georgesterpu.github.io/compile_tensorflow.html
- name: If using the GPU, find cuDNN version
  shell: sed -n 's/^#define CUDNN_MAJOR\s*\(.*\).*/\1/p' /usr/local/cuda/include/cudnn.h
  register: cudnn_version
  when: USE_CPU == 'no' and USE_GPU == 'yes'

- name: Configure TensorFlow for the GPU
  shell: |
    cd {{ TENSORFLOW_BUILD_DIR }} 
    ./configure
  environment:
    GCC_HOST_COMPILER_PATH: '/usr/bin/gcc'
    CC_OPT_FLAGS: '-march=native'
    CUDA_TOOLKIT_PATH: '/usr/local/cuda'
    CUDNN_INSTALL_PATH: '{{ CUDNN_INSTALL_PATH }}'
    NCCL_INSTALL_PATH: '{{ NCCL_INSTALL_PATH }}'
    TF_CUDA_VERSION: '{{ cuda_version.stdout }}'
    TF_CUDNN_VERSION: '{{ cudnn_version.stdout }}'
    TF_DOWNLOAD_CLANG: '0'
    TF_ENABLE_XLA: '0'
    TF_NEED_COMPUTECPP: '0'
    TF_NEED_CUDA: '1'
    TF_NEED_MPI: '0'
    TF_NEED_OPENCL: '0'
    TF_NEED_OPENCL_SYCL: '0'
    TF_NEED_ROCM: '0'
    TF_NEED_TENSORRT: '0'
    TF_PYTHON_CONFIG_REPO: '@org_tensorflow//third_party/toolchains/cpus/py'
    TF_SET_ANDROID_WORKSPACE: '0'
    PYTHON_BIN_PATH: '{{ PYTHON_BIN_PATH }}'
    PYTHON_LIB_PATH: '{{ PYTHON_LIB_PATH }}'
    NUMPY_INCLUDE_DIR: '{{ NUMPY_INSTALL_DIR }}/lib64/python3.6/site-packages/numpy-{{ NUMPY_VERSION }}-py3.6-linux-x86_64.egg/numpy/core/include/numpy'
    LD_LIBRARY_PATH: '{{ NUMPY_INSTALL_DIR }}/lib64/python3.6/site-packages/numpy-{{ NUMPY_VERSION }}-py3.6-linux-x86_64.egg/numpy/core'
  register: tensorflow_configure_log_gpu
  when: USE_CPU == 'no' and USE_GPU == 'yes'

- local_action: template src=tensorflow_configure_log_cpu.j2 dest={{ TENSORFLOW_BUILD_DIR }}/configure.log
  when: USE_CPU == 'yes' and USE_GPU == 'no'

- local_action: template src=tensorflow_configure_log_gpu.j2 dest={{ TENSORFLOW_BUILD_DIR }}/configure.log
  when: USE_CPU == 'no' and USE_GPU == 'yes'

- debug:
    msg: "TensorFlow config logs saved to {{ TENSORFLOW_BUILD_DIR }}/configure.log"

- name: Build TensorFlow for the CPU
  shell: |
    cd {{ TENSORFLOW_BUILD_DIR }}
    bazel build //tensorflow/tools/pip_package:build_pip_package
  when: USE_CPU == 'yes' and USE_GPU == 'no'
  environment:
    LD_LIBRARY_PATH: '{{ NUMPY_INSTALL_DIR }}/lib64/python3.6/site-packages/numpy-{{ NUMPY_VERSION }}-py3.6-linux-x86_64.egg/numpy/core'
  register: tensorflow_cpu_build_log

- local_action: template src=tensorflow_cpu_build_log.j2 dest={{ TENSORFLOW_BUILD_DIR }}/build.log
  when: USE_CPU == 'yes' and USE_GPU == 'no'

- name: Build TensorFlow for the GPU
  shell: |
    cd {{ TENSORFLOW_BUILD_DIR }}
    bazel build --config=cuda //tensorflow/tools/pip_package:build_pip_package
  when: USE_CPU == 'no' and USE_GPU == 'yes'
  environment:
    LD_LIBRARY_PATH: '{{ NUMPY_INSTALL_DIR }}/lib64/python3.6/site-packages/numpy-{{ NUMPY_VERSION }}-py3.6-linux-x86_64.egg/numpy/core'
  register: tensorflow_gpu_build_log

- local_action: template src=tensorflow_gpu_build_log.j2 dest={{ TENSORFLOW_BUILD_DIR }}/build.log
  when: USE_CPU == 'no' and USE_GPU == 'yes'

- debug:
    msg: "TensorFlow build logs saved to {{ TENSORFLOW_BUILD_DIR }}/build.log"

- name: Build pip package with Bazel
  shell: |
    cd {{ TENSORFLOW_BUILD_DIR }}
    ./bazel-bin/tensorflow/tools/pip_package/build_pip_package {{ TF_PIP_PACKAGE_LOCATION }}
