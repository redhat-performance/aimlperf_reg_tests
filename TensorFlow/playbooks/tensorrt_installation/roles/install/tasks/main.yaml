---

# If we're going to use the AWS cli tool, then execute the 'get_tensorrt_from_s3_with_awscli'
# role. If we're going to get TensorRT from a URL, then execute 'get_tensorrt_from_url'.
# Finally, if we're going to get TensorRT from an EBS (Elastic Block Storage), then run the
# 'get_tensorrt_from_ebs' role.
- include_role:
    name: get_tensorrt_from_s3_with_awscli
  when: use_awscli == 'yes' and use_http == 'no' and use_ebs == 'no'

- include_role:
    name: get_tensorrt_from_url
  when: use_awscli == 'no' and use_http == 'yes' and use_ebs == 'no'

- include_role:
    name: get_tensorrt_from_ebs
  when: use_awscli == 'no' and use_http == 'no' and use_ebs == 'yes'

# Delete existing install folder
- name: Delete install folder if it exists
  file:
    state: absent
    path: '{{ tensorrt_install_dir }}'

# Setup install tree
- name: Setup install tree
  file:
    state: directory
    path: '{{ item }}'
  with_items:
    - '{{ tensorrt_install_dir }}'
    - '{{ tensorrt_install_dir }}/include'
    - '{{ tensorrt_install_dir }}/lib'
    - '{{ tensorrt_install_dir }}/lib/python3.6/site-packages'

# Next step is to install the Python TensorRT wheel file, but first, we must get the wheel file name
- name: Get TensorRT wheel file name
  find:
    paths: '{{ tensorrt_download_dir }}/python'
    patterns: '*36*.whl'
  register: tensorrt_wheel_file

# Do the same with the the UFF wheel file
- name: Get UFF wheel file name
  find:
    paths: '{{ tensorrt_download_dir }}/uff'
    patterns: '*.whl'
  register: uff_wheel_file

# Do the same for graphsurgeon as well
- name: Get graphsurgeon wheel file name
  find:
    paths: '{{ tensorrt_download_dir }}/graphsurgeon'
    patterns: '*.whl'
  register: graphsurgeon_wheel_file

# Print out wheel files
- debug:
    msg: 'Found {{ item.path }}'
  with_items: '{{ tensorrt_wheel_file.files }}'
- debug:
    msg: 'Found {{ item.path }}'
  with_items: '{{ uff_wheel_file.files }}'
- debug:
    msg: 'Found {{ item.path }}'
  with_items: '{{ graphsurgeon_wheel_file.files }}'

# Now install TensorRT wheel file
- name: Install Python TensorRT wheel file
  pip:
    name: '{{ item.path }}'
    executable: pip3
    extra_args: '--target={{ tensorrt_install_dir }}/lib/python3.6/site-packages'
  with_items: '{{ tensorrt_wheel_file.files }}'

# Install the UFF wheel file
- name: Install UFF wheel file
  pip:
    name: '{{ item.path }}'
    executable: pip3
    extra_args: '--target={{ tensorrt_install_dir }}/lib/python3.6/site-packages'
  with_items: '{{ uff_wheel_file.files }}'

# Now install
- name: Install graphsurgeon wheel file
  pip:
    name: '{{ item.path }}'
    executable: pip3
    extra_args: '--target={{ tensorrt_install_dir }}/lib/python3.6/site-packages'
  with_items: '{{ graphsurgeon_wheel_file.files }}'

# Install headers
- name: Install headers
  shell: 'mv {{ tensorrt_install_dir }}/include/* {{ tensorrt_install_dir }}/include'

# Install libs
- name: Install shared object libs
  shell: 'mv {{ tensorrt_install_dir }}/lib/* {{ tensorrt_install_dir }}/lib'

# Finally, do some clean up: Remove the temporary download dir because we don't need
# it anymore
- name: Cleanup --> Remove temp dir {{ tensorrt_download_dir }}
  file:
    state: absent
    path: '{{ tensorrt_download_dir }}'
