---

# First step is to check if CUDA is installed... because there's no sense in installing
# cuDNN if there is no CUDA!
- name: Check if CUDA is installed
  shell: 'ls {{ cuda_path }}'
  register: ls_cuda_path_output
  ignore_errors: yes

- block:
  - name: 'End play if user does not have CUDA installed'
    debug:
      msg: 'No CUDA installation found under {{ cuda_path }}'

  - meta: end_play
  when: ls_cuda_path_output.stdout == ""

# If the play did not end, then CUDA was found. Let the user know this.
- debug:
    msg: 'CUDA installation found. Using {{ cuda_path }}'

# Prep for downloading cuDNN by removing the download folder if it exists
- name: Remove downloaded cuDNN folder if it exists
  file:
    state: absent
    path: '{{ cudnn_download_dir }}'

# Now download cuDNN
- name: Download cuDNN
  unarchive:
    src: '{{ cudnn_url }}'
    remote_src: yes
    dest: '{{ cudnn_download_dir }}'
    extra_opts: [--strip-components=1]

# Next step is to move all the files from cuDNN to their appropriate paths under
# the {{ cuda_path }} folder
- name: Move cudnn.h to {{ cuda_path }}/include
  command: mv '{{ cudnn_download_dir }}/include/cudnn.h' '{{ cuda_path }}/include/cudnn.h'

- name: Move cuDNN libs to {{ cuda_path }}/lib64
  shell: mv '{{ cudnn_download_dir }}/lib64/*' '{{ cuda_path }}/lib64/'

# Finally, do some clean up: Remove the temporary download dir because we don't need
# it anymore
- name: Cleanup --> Remove temp dir {{ cudnn_download_dir }}
  file:
    state: absent
    path: '{{ cudnn_download_dir }}'
