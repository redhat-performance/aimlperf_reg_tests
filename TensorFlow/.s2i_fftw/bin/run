#!/bin/bash

# Which version of RHEL?
RHEL_VERSION=$1

# Which device? 'cpu' or 'gpu'
DEVICE=$2

# How many GPUs or CPUs to use?
NUM_DEVICES=$3

# C compiler? e.g., '/usr/bin/gcc'
CC=$4

# URL to NCCL download (make sure to sign up for NVIDIA account)
NCCL=$5

# URL to cuDNN download (make sure to sign up for NVIDIA account)
CUDNN=$6

# Check device input
if [[ ${DEVICE} != "cpu" ]] && [[ ${DEVICE} != "gpu" ]]; then
    echo "ERROR. Unrecognized device '${DEVICE}'"
    exit 1
fi

# Check number of devices
if [[ -z ${NUM_DEVICES} ]]; then
    echo "ERROR. Number of devices is required! Please pass in the number of devices to use."
    exit 1
elif [[ ${NUM_DEVICES} =~ ^[0-9]+$ ]] && (( NUM_DEVICES > 0 )); then
    echo "Using ${NUM_DEVICES} ${DEVICE}s"
else
    echo "ERROR. Number of devices must be a positive integer. You entered: ${NUM_DEVICES}"
    exit 1
fi

# Check C compiler
if [[ -z ${CC} ]]; then
    CC="/usr/bin/gcc"
    echo "Using CC=`which gcc`"
elif [[ -x ${CC} ]]; then
    echo "Using CC=${CC}"
else
    echo "ERROR. Could not find ${CC}. Did you provide the right C compiler (GCC) path?"
    exit 1
fi

# Add user to /etc/passwd
uid=$(id -u)
gid=$(id -g)
echo "${uid}:x:${uid}:${gid}:1001 uid:${HOME}:/bin/sh" >> /etc/passwd
echo "${uid}:x:$(id -G | cut -d' ' -f 2)" >> /etc/group

# Configure git
git config --global user.name user
git config --global user.email user@openshift-s2i

##########################################
#         BUILD AND INSTALL FFTW         #
##########################################
FFTW_INSTALL_DIR="${HOME}/custom_fftw"
FFTW_BUILD_DIR="${HOME}/build"
cd ${HOME}/playbooks/FFTW_installation
ansible-playbook -i hosts play.yaml --extra-vars="{install_dir: '${FFTW_INSTALL_DIR}', build_dir: '${FFTW_BUILD_DIR}', rhel_version: '${RHEL_VERSION}', cc: '${CC}'}"
echo ""
echo "<< SUCCESS >> FFTW built and installed!"
echo ""

##########################################
#       INSTALL NCCL IF USING GPUS       #
##########################################
NCCL_INSTALL_PATH="${HOME}/nccl"
if [[ ${DEVICE} == "gpu" ]]; then
    cd ${HOME}/playbooks/nccl_installation
    ansible-playbook -i hosts play.yaml --extra-vars="{nccl_install_path: '${NCCL_INSTALL_PATH}', nccl_installer: '${NCCL}', cuda_path: '/usr/local/cuda'}"
    echo ""
    echo "<< SUCCESS >> NCCL installed!"
    echo ""
fi

##########################################
#      INSTALL CUDNN IF USING GPUS       #
##########################################
CUDNN_INSTALL_PATH="${HOME}/cuDNN"
if [[ ${DEVICE} == "gpu" ]]; then
    cd ${HOME}/playbooks/cudnn_installation
    ansible-playbook -i hosts play.yaml --extra-vars="{cudnn_install_path: '${CUDNN_INSTALL_PATH}', cudnn: '${CUDNN}', cuda_path: '/usr/local/cuda'}"
    echo ""
    echo "<< SUCCESS >> cuDNN installed!"
    echo ""
fi

##########################################
#      BUILD AND INSTALL TENSORFLOW      #
##########################################
# Change to the installation
cd ${HOME}/playbooks/TensorFlow_installation

# Set TensorFlow install dir
TENSORFLOW_INSTALL_DIR="${HOME}/tensorflow"

# Get the gcc libs
# If we're using a custom gcc, then
if [[ ${CC} != "/usr/bin/gcc" ]]; then
    GCC_EXECUTABLE_NAME=$(echo ${CC} | rev | cut -d'/' -f1 | rev)
    GCC_LIBS=''
    IN=${CC}
    files_folders=$(echo $IN | tr "/" "\n")
    for f in ${files_folders}; do

        if [[ ${f} == ${GCC_EXECUTABLE_NAME} ]]; then
            break;
        fi

        GCC_LIBS="${GCC_LIBS}/${f}"
    done

# Otherwise, the gcc libs are just under /usr/lib/x86_64*
else
    x86_64_folder=$(ls /usr/lib | grep x86_64)
    GCC_LIBS="/usr/lib/${x86_64_folder}"
fi

# Now build and install TensorFlow
if [[ ${DEVICE} == "cpu" ]]; then
    ansible-playbook -i hosts play.yaml --extra-vars="{rhel_version: '${RHEL_VERSION}', cc: '${CC}', gcc_libs: '${GCC_LIBS}', blas_library_dirs: '${FFTW_INSTALL_DIR}/lib', blas_include_dirs: '${FFTW_INSTALL_DIR}/include', tf_install_dir: '${TENSORFLOW_INSTALL_DIR}'}"
else
    ansible-playbook -i hosts play.yaml --extra-vars="{rhel_version: '${RHEL_VERSION}', cc: '${CC}', gcc_libs: '${GCC_LIBS}', blas_library_dirs: '${FFTW_INSTALL_DIR}/lib', blas_include_dirs: '${FFTW_INSTALL_DIR}/include', tf_install_dir: '${TENSORFLOW_INSTALL_DIR}', use_gpu: 'yes', use_cpu: 'no', nccl_install_path: '${NCCL_INSTALL_PATH}', cudnn_install_path: '${CUDNN_INSTALL_PATH}'}"
fi
echo ""
echo "<< SUCCESS >> TensorFlow + NumPy built and installed!"
echo ""

##########################################
#        RUN TENSORFLOW BENCHMARKS       #
##########################################
cd ${HOME}/playbooks/TensorFlow_benchmarks
if [[ ${DEVICE} == "cpu" ]]; then
    ansible-playbook -i hosts play.yaml --extra-vars="{tf_installation: '${TENSORFLOW_INSTALL_DIR}', num_devices: '${NUM_DEVICES}'}"
else
    ansible-playbook -i hosts play.yaml --extra-vars="{tf_installation: '${TENSORFLOW_INSTALL_DIR}', device: 'gpu', num_devices: '${NUM_DEVICES}'}"
fi

##########################################
# PRINT OUT TENSORFLOW BENCHMARK RESULTS #
##########################################
cat ${HOME}/tensorflow_benchmarks/scripts/tf_cnn_benchmarks/resnet50-${DEVICE}-benchmark.log
