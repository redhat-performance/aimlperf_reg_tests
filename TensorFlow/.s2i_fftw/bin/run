#!/bin/bash

# Which version of RHEL?
RHEL_VERSION=$1

# Which device? 'cpu' or 'gpu'
DEVICE=$2

# How many GPUs? (Only required if using GPUs.)
NUM_GPUS=$3

# URL to NCCL download (make sure to sign up for NVIDIA account)
NCCL=$4

# URL to cuDNN download (make sure to sign up for NVIDIA account)
CUDNN=$5

# Check device input
if [[ ${DEVICE} != "cpu" ]] && [[ ${DEVICE} != "gpu" ]]; then
    echo "ERROR. Unrecognized device '${DEVICE}'"
    exit 1
fi

# Add user to /etc/passwd
uid=$(id -u)
gid=$(id -g)
echo "${uid}:x:${uid}:${gid}:1001 uid:${HOME}:/bin/sh" >> /etc/passwd
echo "${uid}:x:$(id -G | cut -d' ' -f 2)" >> /etc/group

# Configure git
git config --global user.name user
git config --global user.email user@openshift-s2i

##########################################
#         BUILD AND INSTALL FFTW         #
##########################################
FFTW_INSTALL_DIR=${HOME}/custom_fftw
FFTW_BUILD_DIR=${HOME}/build
cd ${HOME}/playbooks/FFTW_installation
ansible-playbook -i hosts play.yaml --extra-vars="{install_dir: ${FFTW_INSTALL_DIR}, build_dir: ${FFTW_BUILD_DIR}, rhel_version: ${RHEL_VERSION}}"

##########################################
#       INSTALL NCCL IF USING GPUS       #
##########################################
NCCL_INSTALL_PATH=${HOME}/nccl
if [[ ${DEVICE} == "gpu" ]]; then
    cd ${HOME}/playbooks/nccl_installation
    ansible-playbook -i hosts play.yaml --extra-vars="{nccl_install_path: '${NCCL_INSTALL_PATH}', nccl_installer: '${NCCL}', cuda_path: '/usr/local/cuda'}"
fi

##########################################
#      INSTALL CUDNN IF USING GPUS       #
##########################################
CUDNN_INSTALL_PATH=${HOME}/cuDNN
if [[ ${DEVICE} == "gpu" ]]; then
    cd ${HOME}/playbooks/cudnn_installation
    ansible-playbook -i hosts play.yaml --extra-vars="{cudnn_install_path: '${CUDNN_INSTALL_PATH}', cudnn: '${CUDNN}', cuda_path: '/usr/local/cuda'}"
fi

##########################################
#      BUILD AND INSTALL TENSORFLOW      #
##########################################
cd ${HOME}/playbooks/TensorFlow_installation
TENSORFLOW_INSTALL_DIR=${HOME}/tensorflow
if [[ ${DEVICE} == "cpu" ]]; then
    ansible-playbook -i hosts play.yaml --extra-vars="{rhel_version: ${RHEL_VERSION}, blas_library_dirs: ${FFTW_INSTALL_DIR}/lib, blas_include_dirs: ${FFTW_INSTALL_DIR}/include, tf_install_dir: ${TENSORFLOW_INSTALL_DIR}}"
else
    ansible-playbook -i hosts play.yaml --extra-vars="{rhel_version: ${RHEL_VERSION}, blas_library_dirs: ${FFTW_INSTALL_DIR}/lib, blas_include_dirs: ${FFTW_INSTALL_DIR}/include, tf_install_dir: ${TENSORFLOW_INSTALL_DIR}}, use_gpu: 'yes', use_cpu: 'no', nccl_install_path: '${NCCL_INSTALL_PATH}', cudnn_install_path: '${CUDNN_INSTALL_PATH}'}"
fi

##########################################
#        RUN TENSORFLOW BENCHMARKS       #
##########################################
cd ${HOME}/playbooks/TensorFlow_benchmarks
if [[ ${DEVICE} == "cpu" ]]; then
    ansible-playbook -i hosts play.yaml --extra-vars="{tf_installation: ${TENSORFLOW_INSTALL_DIR}}"
else
    if [[ -z ${NUM_GPUS} ]]; then
        echo "ERROR. Missing input for number of GPUs."
    elif [[ ${NUM_GPUS} =~ ^[0-9]+$ ]] && (( NUM_GPUS > 0 )); then
        ansible-playbook -i hosts play.yaml --extra-vars="{tf_installation: ${TENSORFLOW_INSTALL_DIR}, device: 'gpu', num_gpus: ${NUM_GPUS}}"
    else
        echo "ERROR. Number of GPUs must be a positive integer."
    fi
fi

##########################################
# PRINT OUT TENSORFLOW BENCHMARK RESULTS #
##########################################
tail -n 15 ${HOME}/tensorflow_benchmarks/tf_cnn_benchmarks/resnet50-${DEVICE}-benchmark*.log
