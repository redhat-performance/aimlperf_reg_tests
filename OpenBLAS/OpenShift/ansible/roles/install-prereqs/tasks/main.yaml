---
- name: yum update (if using RHEL 7)
  yum: name=* state=latest
  when: RHEL_VERSION == "7"

- name: Install EPEL (if using RHEL 7)
  yum: pkg=https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
  when: RHEL_VERSION == "7"

- name: If using RHEL 7, install yum prereqs
  yum:
    name:
      - automake
      - bzip2
      - cpp
      - gcc
      - gcc-c++
      - gcc-gfortran
      - git
      - gyp
      - libdb-devel
      - libgfortran
      - libquadmath
      - libquadmath-devel
      - libtool
      - make
      - patch
      - perl
      - perl-interpreter
      - perl-libs
      - python36-setuptools
      - wget
      - zlib-devel
    state: present
  when: RHEL_VERSION == "7"

- name: dnf update (if using RHEL 8)
  dnf: name=* state=latest
  when: RHEL_VERSION == "8"

- name: If using RHEL 8, install dnf prereqs
  yum:
    name:
      - automake
      - bzip2
      - cpp
      - gcc
      - gcc-c++
      - gcc-gfortran
      - git
      - gyp
      - libdb-devel
      - libgfortran
      - libquadmath
      - libquadmath-devel
      - libtool
      - make
      - nspr
      - nss
      - patch
      - perl
      - perl-interpreter
      - perl-libs
      - python36-python-setuptools
      - wget
      - zlib-devel
    state: present
  when: RHEL_VERSION == "8"

- name: Get NSPR
  unarchive:
    src: https://hg.mozilla.org/projects/nspr/archive/NSPR_4_20_BRANCH.tar.gz
    dest: '{{ BUILD_DIR }}'
    remote_src: yes
    
- name: Rename NSPR folder
  command: mv {{ BUILD_DIR }}/nspr-NSPR_4_20_BRANCH {{ BUILD_DIR }}/nspr

- name: Make NSS directory
  file:
    state: directory
    dest: '{{ BUILD_DIR }}/nss'

- name: Get NSS
  git:
    repo: https://github.com/nss-dev/nss.git
    dest: '{{ BUILD_DIR }}/nss'
    version: '{{ NSS_VERSION }}'

- name: Configure NSS and NSPR
  shell: |
    cd {{ BUILD_DIR }}/nss
    ./build.sh
    cd {{ BUILD_DIR }}/nspr
    ./configure --enable-64bit

- name: Fix nsinstall bug (where nsinstall can't be found by NSS)
  replace:
    path: '{{ BUILD_DIR }}/nspr/configure'
    regexp: "^NSINSTALL=.*"
    replace: "NSINSTALL='/{{ BUILD_DIR }}/nspr/config/nsinstall'"

- make:
    chdir: '{{ BUILD_DIR }}/nspr'
    target: all

- make:
    chdir: '{{ BUILD_DIR }}/nspr'
    target: install

- name: Make NSS via gmake
  shell: |
    cd {{ BUILD_DIR }}/nss
    gmake BUILD_OPT=1 USE_64=1 NSPR_INCLUDE_DIR=/usr/local/include/nspr USE_SYSTEM_ZLIB=1 ZLIB_LIBS=-lz nss_build_all
    gmake BUILD_OPT=1 USE_64=1 NSPR_INCLUDE_DIR=/usr/local/include/nspr USE_SYSTEM_ZLIB=1 ZLIB_LIBS=-lz install

- name: Install only the necessary NSS include files
  shell: |
    cd {{ BUILD_DIR }}/nss
    cp lib/cryptohi/*.h /usr/include
    cp lib/util/*.h /usr/include
    cp lib/pk11wrap/*.h /usr/include
    cp lib/certdb/*.h /usr/include
    cp lib/freebl/*.h /usr/include
    cp lib/freebl/ecl/*.h /usr/include
    cp lib/nss/*.h /usr/include

- name: Remove NSS build folder
  file:
    path: '{{ BUILD_DIR }}/nss'
    state: absent

- name: Remove NSPR build folder
  file:
    path: '{{ BUILD_DIR }}/nspr'
    state: absent

- name: Remove dist folder which was generated by NSS
  file:
    path: '{{ BUILD_DIR }}/dist'
    state: absent

- name: Get popt
  unarchive:
    src: http://rpm5.org/files/popt/popt-1.16.tar.gz
    dest: '{{ BUILD_DIR }}'
    remote_src: yes

- name: Configure popt
  shell: |
    cd {{ BUILD_DIR }}/popt-1.16
    ./configure

- make:
    chdir: '{{ BUILD_DIR }}/popt-1.16'
    target: all

- make:
    chdir: '{{ BUILD_DIR }}/popt-1.16'
    target: install

- name: Create symbolic link for libpopt
  file:
    src: /usr/lib64/libpopt.so.0
    dest: /usr/lib64/libpopt.so
    state: link

- name: Remove popt build folder
  file:
    path: '{{ BUILD_DIR }}/popt-1.16'
    state: absent

- name: Get libarchive
  unarchive:
    src: https://github.com/libarchive/libarchive/releases/download/v3.3.3/libarchive-3.3.3.tar.gz
    dest: '{{ BUILD_DIR }}'
    remote_src: yes

- name: Configure libarchive
  shell: |
    cd {{ BUILD_DIR }}/libarchive-3.3.3
    ./configure

- make: 
    chdir: '{{ BUILD_DIR }}/libarchive-3.3.3'
    target: -j4

- make: 
    chdir: '{{ BUILD_DIR }}/libarchive-3.3.3'
    target: install

- name: Remove libarchive build folder
  file:
    path: '{{ BUILD_DIR }}/libarchive-3.3.3'
    state: absent
    
- name: Make File directory
  file:
    state: directory
    dest: '{{ BUILD_DIR }}/file'

- name: Get File
  git:
    repo: https://github.com/file/file.git
    dest: '{{ BUILD_DIR }}/file'
    version: '{{ FILE_VERSION }}'

- name: Configure File
  shell: |
    cd {{ BUILD_DIR }}/file
    autoreconf -f -i
    ./configure --disable-silent-rules

- make:
    chdir: '{{ BUILD_DIR }}/file'
    target: -j4

- make:
    chdir: '{{ BUILD_DIR }}/file'
    target: install

- name: Remove File build folder
  file:
    path: '{{ BUILD_DIR }}/file'
    state: absent
    
